{"version":3,"file":"static/js/403.b172509c.chunk.js","mappings":"4MACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAAgG,+B,6BCQnFA,EAAc,WACzB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAEE,OAEG,SAAfD,EAAME,MACRT,EAAYO,EAAMG,OAED,QAAfH,EAAME,MACRP,EAAUK,EAAMG,MAEnB,EAWD,OACE,kBAAMC,SAVY,SAAAL,GAClBA,EAAEM,iBAEFT,GAASU,EAAAA,EAAAA,IAAW,CAAEC,KAAMf,EAAUgB,MAAOd,KAE7CC,EAAU,IACVF,EAAY,GACb,EAG8BgB,UAAWC,EAAxC,WACE,8BACE,iCACA,kBACER,KAAK,OACLK,KAAK,OACLI,QAAQ,yHACRC,UAAQ,EACRT,MAAOX,EACPqB,SAAUf,EACVW,UAAWC,QAGf,8BACE,mCACA,kBACER,KAAK,MACLK,KAAK,SACLI,QAAQ,yFACRC,UAAQ,EACRT,MAAOT,EACPmB,SAAUf,EACVW,UAAWC,QAGf,mBACA,mBAAQR,KAAK,SAASO,UAAWC,EAAjC,2BAKL,EClED,EAA2B,yBAA3B,EAA4D,sBAA5D,EAA0F,sB,UCG7EI,EAAS,WACpB,IAAMlB,GAAWC,EAAAA,EAAAA,MACXkB,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAMlC,OACE,mBAAOR,UAAWC,EAAlB,WACE,cAAGD,UAAWC,EAAd,oCACA,kBACER,KAAK,OACLC,MAAOY,EACPF,SAVe,SAAAd,GACnBH,GAASsB,EAAAA,EAAAA,IAAUnB,EAAEE,OAAOE,OAC7B,EASKM,UAAWC,MAIlB,ECtBD,GAAgB,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,6B,UCOlFS,EAAc,WACzB,IAAMvB,GAAWC,EAAAA,EAAAA,MACjB,GAAoCmB,EAAAA,EAAAA,IAAYI,EAAAA,GAAxCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MACpBR,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,KAClCO,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,IAEJ,IAAM8B,EAAe,SAAA3B,GACnB,IAAM4B,EAAK5B,EAAE6B,cAAcD,GAC3B/B,GAASiC,EAAAA,EAAAA,IAAcF,GACxB,EAUD,OACE,gBAAIlB,UAAWC,EAAAA,KAAf,UACGY,IAAa,4CACbC,IAAS,uBAAIA,IAXM,WACtB,IAAMO,EAAkBf,EAAcgB,oBAEtC,OAAOV,EAAMW,QAAO,SAAAC,GAAI,OACtBA,EAAK1B,KAAK2B,cAAcC,SAASL,EADX,GAGzB,CAMIM,GAAkBC,KAAI,SAAAJ,GAAI,OACzB,gBAAkBxB,UAAWC,EAAAA,KAA7B,UACGuB,EAAK1B,KADR,KACc,iBAAME,UAAWC,EAAAA,OAAjB,SAA8BuB,EAAKzB,SAC/C,mBAAQmB,GAAIM,EAAKN,GAAIW,QAASZ,EAAcjB,UAAWC,EAAAA,OAAvD,sBAFOuB,EAAKN,GADW,MAUhC,EC1CD,EAA2B,+BAA3B,EAAkE,4BCoBlE,EAhBqB,WACnB,OACE,iBAAKlB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,6BAEA,SAACpB,EAAD,KAEA,eAAImB,UAAWC,EAAf,uBAEA,SAACI,EAAD,KAEA,SAACK,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import { useState } from 'react';\n//\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n//\nimport { useDispatch } from 'react-redux';\n//\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [nameCont, setNameCont] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const event = e.target;\n\n    if (event.type === 'text') {\n      setNameCont(event.value);\n    }\n    if (event.type === 'tel') {\n      setNumber(event.value);\n    }\n  };\n\n  const onSubmitEvt = e => {\n    e.preventDefault();\n\n    dispatch(addContact({ name: nameCont, phone: number }));\n\n    setNumber('');\n    setNameCont('');\n  };\n\n  return (\n    <form onSubmit={onSubmitEvt} className={css.form}>\n      <label>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          value={nameCont}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={css.input}\n        />\n      </label>\n      <br />\n      <button type=\"submit\" className={css.submitBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"findForm\":\"Filter_findForm__b99Fo\",\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const currentFilter = useSelector(getFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.findForm}>\n      <p className={css.title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={currentFilter}\n        onChange={changeFilter}\n        className={css.input}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"delBtn\":\"ContactList_delBtn__SixzE\",\"number\":\"ContactList_number__2af8f\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsSlice';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { getFilter } from 'redux/contacts/filterSlice';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(getContacts);\n  const currentFilter = useSelector(getFilter);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const delContactFn = e => {\n    const id = e.currentTarget.id;\n    dispatch(deleteContact(id));\n  };\n\n  const filtredContacts = () => {\n    const toLowCaseFilter = currentFilter.toLocaleLowerCase();\n\n    return items.filter(cont =>\n      cont.name.toLowerCase().includes(toLowCaseFilter)\n    );\n  };\n\n  return (\n    <ul className={css.list}>\n      {isLoading && <b>Loading tasks...</b>}\n      {error && <b>{error}</b>}\n      {filtredContacts().map(cont => (\n        <li key={cont.id} className={css.item}>\n          {cont.name}:<span className={css.number}>{cont.phone}</span>\n          <button id={cont.id} onClick={delContactFn} className={css.delBtn}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  currentFilter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"appStyle\":\"ContactsPage_appStyle__yRhr1\",\"title\":\"ContactsPage_title__P3MkR\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.appStyle}>\n      <h1 className={css.title}>Phonebook~HW_8</h1>\n\n      <ContactForm />\n\n      <h2 className={css.title}>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","useState","nameCont","setNameCont","number","setNumber","dispatch","useDispatch","handleChange","e","event","target","type","value","onSubmit","preventDefault","addContact","name","phone","className","css","pattern","required","onChange","Filter","currentFilter","useSelector","getFilter","setFilter","ContactList","getContacts","items","isLoading","error","useEffect","fetchContacts","delContactFn","id","currentTarget","deleteContact","toLowCaseFilter","toLocaleLowerCase","filter","cont","toLowerCase","includes","filtredContacts","map","onClick"],"sourceRoot":""}